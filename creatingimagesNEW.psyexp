<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2024.1.4">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': 'f&quot;{randint(0, 999999):06.0f}&quot;', 'session': '001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="False" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1536, 864]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="float" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="$[-1,-1,-1]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="creatingimagesNEW" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="" valType="code" updates="None" name="frameRate"/>
    <Param val="Attempting to measure frame rate of screen, please wait..." valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="warning" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="1" valType="code" updates="None" name="runMode"/>
    <Param val="False" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="Welcome_Page">
      <RoutineSettingsComponent name="Welcome_Page" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Welcome_Page" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="textWelcomePage" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="textWelcomePage" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Hello!&amp;#10;&amp;#10;Thank you for participating in this experiment. Please read the instructions before beginning. &amp;#10;&amp;#10;Instructions:&amp;#10;You will be presented with a variety of shapes. Your task is to choose the triangle. You will not be able to move on to the next slide unless you correctly choose the triangle with your mouse. Once you begin the experiment you will not be able to leave until you have successfully completed all tasks. This experiment will take approximately 5 minutes. &amp;#10;&amp;#10;PLEASE PRESS THE SPACE BAR TO BEGIN THE EXPERIMENT" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="End_Routine">
      <RoutineSettingsComponent name="End_Routine" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="End_Routine" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="End_Text" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="End_Text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Thank you for completing the experiment! Please press the SPACE BAR to exit the program. " valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_2" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="code_attempt">
      <RoutineSettingsComponent name="code_attempt" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="code_attempt" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val=" " valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#Caroline coded lines 1-5 and lines 13-93. 25 hours.&amp;#10;fixation_square = visual.Polygon (win = win, edges = 4, radius = 0.1, pos = (0,0), size = 0.3, fillColor = [1, 1, 1], fillColorSpace = 'rgb', ori=90.0)&amp;#10;fixation_square.draw()&amp;#10;win.update()&amp;#10;core.wait (0.2)&amp;#10;&amp;#10;mouse = event.Mouse(win = win)&amp;#10;mouse.mouseClock = core.Clock()&amp;#10;&amp;#10;#Garv coded.&amp;#10;mouse.setPos(0)&amp;#10;&amp;#10;#Sets circle1 position.&amp;#10;if triangle_pos != (0, 0.25):&amp;#10;    circle1_pos = (0, 0.25)&amp;#10;else:&amp;#10;    circle1_pos = (0.1875, 0.1875)&amp;#10;   &amp;#10;#Sets circle2 position.&amp;#10;if triangle_pos != (0.1875, 0.1875) and triangle_pos != (0, 0.25):&amp;#10;    circle2_pos = (0.1875, 0.1875)&amp;#10;else:&amp;#10;    circle2_pos = (0.25, 0)&amp;#10;&amp;#10;#Sets circle3 position.&amp;#10;if triangle_pos != (0.25, 0) and triangle_pos != (0.1875, 0.1875) and triangle_pos != (0, 0.25):&amp;#10;    circle3_pos = (0.25, 0)&amp;#10;else:&amp;#10;    circle3_pos = (0.1875, -0.1875)&amp;#10;&amp;#10;#Sets circle4 position.&amp;#10;if triangle_pos == (0, -0.25) or triangle_pos == (-0.1875, -0.1875) or triangle_pos == (-0.25, 0) or triangle_pos == (-0.1875, 0.1875):&amp;#10;    circle4_pos = (0.1875, -0.1875)&amp;#10;else:&amp;#10;    circle4_pos = (0, -0.25)&amp;#10;    &amp;#10;#Sets circle5 position.&amp;#10;if triangle_pos== (-0.1875, -0.1875) or triangle_pos == (-0.25, 0) or triangle_pos == (-0.1875, 0.1875):&amp;#10;    circle5_pos = (0, -0.25)&amp;#10;else:&amp;#10;    circle5_pos = (-0.1875, -0.1875)&amp;#10;    &amp;#10;#Sets circle6 position.&amp;#10;if triangle_pos == (-0.25, 0) or triangle_pos == (-0.1875, 0.1875):&amp;#10;    circle6_pos = (-0.1875, -0.1875)&amp;#10;else:&amp;#10;    circle6_pos = (-0.25, 0)&amp;#10;    &amp;#10;#Sets circle7 position.&amp;#10;if triangle_pos == (-0.1875, 0.1875):&amp;#10;    circle7_pos = (-0.25, 0)&amp;#10;else:&amp;#10;    circle7_pos = (-0.1875, 0.1875)&amp;#10;&amp;#10;#Sets the triangle color.&amp;#10;if triangle_color == 'g':&amp;#10;    triangle1_color = [-0.6078, 0.6708, -0.6708]&amp;#10;else:&amp;#10;    triangle1_color = [1.0000, -1.0000, 1.0000]&amp;#10;    &amp;#10;#Sets the circle colors - all green except if the position matches pink_circle_pos.&amp;#10;#Then it is set to pink.&amp;#10;&amp;#10;circle1_color = []&amp;#10;circle2_color = []&amp;#10;circle3_color = []&amp;#10;circle4_color = []&amp;#10;circle5_color = []&amp;#10;circle6_color = []&amp;#10;circle7_color = []&amp;#10;&amp;#10;circle_positions = [circle1_pos, circle2_pos, circle3_pos, circle4_pos, circle5_pos, circle6_pos, circle7_pos]&amp;#10;circle_colors = [circle1_color, circle2_color, circle3_color, circle4_color, circle5_color, circle6_color, circle7_color]&amp;#10;&amp;#10;for ii in range (len (circle_colors)):&amp;#10;    if circle_positions [ii] == pink_circle_pos:&amp;#10;        circle_colors[ii] = [1.0000, -1.0000, 1.0000]&amp;#10;    else:&amp;#10;        circle_colors[ii] = [-0.6708, 0.6708, -0.6708]&amp;#10;&amp;#10;for ii in range (len(circle_colors)):&amp;#10;    circles = visual.Circle (win = win, edges = 'circle', pos = circle_positions[ii], size = 0.1, fillColor = circle_colors[ii], fillColorSpace = 'rgb')&amp;#10;    circles.draw()&amp;#10;triangle1 = visual.Polygon (win = win, edges = 3, pos = triangle_pos, size = 0.125, fillColor = triangle1_color, lineColor = triangle1_color, fillColorSpace = 'rgb', lineColorSpace = 'rgb')&amp;#10;triangle1.draw()&amp;#10;fixation_square.draw()&amp;#10;win.update()&amp;#10;            &amp;#10;while triangle1.contains(mouse) == False:&amp;#10;    core.wait (1)&amp;#10;    &amp;#10;if triangle1.contains(mouse) == True:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="builder_attempt">
      <RoutineSettingsComponent name="builder_attempt" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="builder_attempt" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#Caroline coded lines 6-90.&amp;#10;#Sets circle1 position.&amp;#10;if triangle_pos != (0, 0.25):&amp;#10;    circle1_pos = (0, 0.25)&amp;#10;else:&amp;#10;    circle1_pos = (0.1875, 0.1875)&amp;#10;   &amp;#10;#Sets circle2 position.&amp;#10;if triangle_pos != (0.1875, 0.1875) and triangle_pos != (0, 0.25):&amp;#10;    circle2_pos = (0.1875, 0.1875)&amp;#10;else:&amp;#10;    circle2_pos = (0.25, 0)&amp;#10;&amp;#10;#Sets circle3 position.&amp;#10;if triangle_pos != (0.25, 0) and triangle_pos != (0.1875, 0.1875) and triangle_pos != (0, 0.25):&amp;#10;    circle3_pos = (0.25, 0)&amp;#10;else:&amp;#10;    circle3_pos = (0.1875, -0.1875)&amp;#10;&amp;#10;#Sets circle4 position.&amp;#10;if triangle_pos == (0, -0.25) or triangle_pos == (-0.1875, -0.1875) or triangle_pos == (-0.25, 0) or triangle_pos == (-0.1875, 0.1875):&amp;#10;    circle4_pos = (0.1875, -0.1875)&amp;#10;else:&amp;#10;    circle4_pos = (0, -0.25)&amp;#10;    &amp;#10;#Sets circle5 position.&amp;#10;if triangle_pos== (-0.1875, -0.1875) or triangle_pos == (-0.25, 0) or triangle_pos == (-0.1875, 0.1875):&amp;#10;    circle5_pos = (0, -0.25)&amp;#10;else:&amp;#10;    circle5_pos = (-0.1875, -0.1875)&amp;#10;    &amp;#10;#Sets circle6 position.&amp;#10;if triangle_pos == (-0.25, 0) or triangle_pos == (-0.1875, 0.1875):&amp;#10;    circle6_pos = (-0.1875, -0.1875)&amp;#10;else:&amp;#10;    circle6_pos = (-0.25, 0)&amp;#10;    &amp;#10;#Sets circle7 position.&amp;#10;if triangle_pos == (-0.1875, 0.1875):&amp;#10;    circle7_pos = (-0.25, 0)&amp;#10;else:&amp;#10;    circle7_pos = (-0.1875, 0.1875)&amp;#10;&amp;#10;#Sets the triangle color.&amp;#10;if triangle_color == 'g':&amp;#10;    triangle1_color = [-0.6078, 0.6708, -0.6708]&amp;#10;else:&amp;#10;    triangle1_color = [1.0000, -1.0000, 1.0000]&amp;#10;    &amp;#10;#Sets the circle colors - all green except if the position matches pink_circle_pos.&amp;#10;#Then it is set to pink.&amp;#10;if circle1_pos == pink_circle_pos:&amp;#10;    circle1_color = [1.0000, -1.0000, 1.0000]&amp;#10;else:&amp;#10;    circle1_color = [-0.6078, 0.6708, -0.6708]&amp;#10;    &amp;#10;if circle2_pos == pink_circle_pos:&amp;#10;    circle2_color = [1.0000, -1.0000, 1.0000]&amp;#10;else:&amp;#10;    circle2_color = [-0.6078, 0.6708, -0.6708]&amp;#10;    &amp;#10;if circle3_pos == pink_circle_pos:&amp;#10;    circle3_color = [1.0000, -1.0000, 1.0000]&amp;#10;else:&amp;#10;    circle3_color = [-0.6078, 0.6708, -0.6708]&amp;#10;    &amp;#10;if circle4_pos == pink_circle_pos:&amp;#10;    circle4_color = [1.0000, -1.0000, 1.0000]&amp;#10;else:&amp;#10;    circle4_color = [-0.6078, 0.6708, -0.6708]&amp;#10;    &amp;#10;if circle5_pos == pink_circle_pos:&amp;#10;    circle5_color = [1.0000, -1.0000, 1.0000]&amp;#10;else:&amp;#10;    circle5_color = [-0.6078, 0.6708, -0.6708]&amp;#10;    &amp;#10;if circle6_pos == pink_circle_pos:&amp;#10;    circle6_color = [1.0000, -1.0000, 1.0000]&amp;#10;else:&amp;#10;    circle6_color = [-0.6078, 0.6708, -0.6708]&amp;#10;    &amp;#10;if circle7_pos == pink_circle_pos:&amp;#10;    circle7_color = [1.0000, -1.0000, 1.0000]&amp;#10;else:&amp;#10;    circle7_color = [-0.6078, 0.6708, -0.6708]&amp;#10;&amp;#10;#Garv coded.&amp;#10;mouse.setPos(0)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="circle1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$circle1_color" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$circle1_color" valType="color" updates="set every repeat" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="circle1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$circle1_pos" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.1, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="circle2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$circle2_color" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$circle2_color" valType="color" updates="set every repeat" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="circle2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$circle2_pos" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.1, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="circle3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$circle3_color" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$circle3_color" valType="color" updates="set every repeat" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="circle3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$circle3_pos" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.1, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="circle4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$circle4_color" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$circle4_color" valType="color" updates="set every repeat" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="circle4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$circle4_pos" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.1, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="circle5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$circle5_color" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$circle5_color" valType="color" updates="set every repeat" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="circle5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$circle5_pos" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.1, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="circle6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$circle6_color" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$circle6_color" valType="color" updates="set every repeat" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="circle6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$circle6_pos" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.1, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="circle7" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$circle7_color" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$circle7_color" valType="color" updates="set every repeat" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="circle7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$circle7_pos" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.1, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="triangle1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$triangle1_color" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$triangle1_color" valType="color" updates="set every repeat" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="triangle1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$triangle_pos" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="triangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.1, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <MouseComponent name="mouse" plugin="None">
        <Param val="[triangle1]" valType="list" updates="constant" name="clickable"/>
        <Param val="triangle1" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="valid click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="final" valType="str" updates="None" name="saveMouseState"/>
        <Param val="name," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
    </Routine>
    <Routine name="coder_attempt2">
      <RoutineSettingsComponent name="coder_attempt2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="coder_attempt2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="fixation_square = visual.Polygon (win = win, edges = 4, radius = 0.1, pos = (0,0), size = 0.1, fillColor = [1, 1, 1], fillColorSpace = 'rgb', ori=90.0)&amp;#10;fixation_square.draw()&amp;#10;win.update()&amp;#10;core.wait (0.2)&amp;#10;&amp;#10;mouse = event.Mouse(win = win)&amp;#10;mouse.mouseClock = core.Clock()&amp;#10;#Sets circle1 position.&amp;#10;if triangle_pos != (0, 0.25):&amp;#10;    circle1_pos = (0, 0.25)&amp;#10;else:&amp;#10;    circle1_pos = (0.1875, 0.1875)&amp;#10;   &amp;#10;#Sets circle2 position.&amp;#10;if triangle_pos != (0.1875, 0.1875) and triangle_pos != (0, 0.25):&amp;#10;    circle2_pos = (0.1875, 0.1875)&amp;#10;else:&amp;#10;    circle2_pos = (0.25, 0)&amp;#10;&amp;#10;#Sets circle3 position.&amp;#10;if triangle_pos != (0.25, 0) and triangle_pos != (0.1875, 0.1875) and triangle_pos != (0, 0.25):&amp;#10;    circle3_pos = (0.25, 0)&amp;#10;else:&amp;#10;    circle3_pos = (0.1875, -0.1875)&amp;#10;&amp;#10;#Sets circle4 position.&amp;#10;if triangle_pos == (0, -0.25) or triangle_pos == (-0.1875, -0.1875) or triangle_pos == (-0.25, 0) or triangle_pos == (-0.1875, 0.1875):&amp;#10;    circle4_pos = (0.1875, -0.1875)&amp;#10;else:&amp;#10;    circle4_pos = (0, -0.25)&amp;#10;    &amp;#10;#Sets circle5 position.&amp;#10;if triangle_pos== (-0.1875, -0.1875) or triangle_pos == (-0.25, 0) or triangle_pos == (-0.1875, 0.1875):&amp;#10;    circle5_pos = (0, -0.25)&amp;#10;else:&amp;#10;    circle5_pos = (-0.1875, -0.1875)&amp;#10;    &amp;#10;#Sets circle6 position.&amp;#10;if triangle_pos == (-0.25, 0) or triangle_pos == (-0.1875, 0.1875):&amp;#10;    circle6_pos = (-0.1875, -0.1875)&amp;#10;else:&amp;#10;    circle6_pos = (-0.25, 0)&amp;#10;    &amp;#10;#Sets circle7 position.&amp;#10;if triangle_pos == (-0.1875, 0.1875):&amp;#10;    circle7_pos = (-0.25, 0)&amp;#10;else:&amp;#10;    circle7_pos = (-0.1875, 0.1875)&amp;#10;&amp;#10;#Sets the triangle color.&amp;#10;if triangle_color == 'g':&amp;#10;    triangle1_color = [-0.6078, 0.6708, -0.6708]&amp;#10;else:&amp;#10;    triangle1_color = [1.0000, -1.0000, 1.0000]&amp;#10;    &amp;#10;#Sets the circle colors - all green except if the position matches pink_circle_pos.&amp;#10;#Then it is set to pink.&amp;#10;&amp;#10;circle1_color = []&amp;#10;circle2_color = []&amp;#10;circle3_color = []&amp;#10;circle4_color = []&amp;#10;circle5_color = []&amp;#10;circle6_color = []&amp;#10;circle7_color = []&amp;#10;&amp;#10;circle_positions = [circle1_pos, circle2_pos, circle3_pos, circle4_pos, circle5_pos, circle6_pos, circle7_pos]&amp;#10;circle_colors = [circle1_color, circle2_color, circle3_color, circle4_color, circle5_color, circle6_color, circle7_color]&amp;#10;&amp;#10;for ii in range (len (circle_colors)):&amp;#10;    if circle_positions [ii] == pink_circle_pos:&amp;#10;        circle_colors[ii] = [1.0000, -1.0000, 1.0000]&amp;#10;    else:&amp;#10;        circle_colors[ii] = [-0.6708, 0.6708, -0.6708]&amp;#10;&amp;#10;for ii in range (len(circle_colors)):&amp;#10;    circles = visual.Circle (win = win, edges = 'circle', pos = circle_positions[ii], size = 0.1, fillColor = circle_colors[ii], fillColorSpace = 'rgb')&amp;#10;    circles.draw()&amp;#10;triangle1 = visual.Polygon (win = win, edges = 3, pos = triangle_pos, size = 0.125, fillColor = triangle1_color, lineColor = triangle1_color, fillColorSpace = 'rgb', lineColorSpace = 'rgb')&amp;#10;triangle1.draw()&amp;#10;win.update()&amp;#10;while triangle1.contains(mouse) == False:&amp;#10;    core.wait (1)&amp;#10;    &amp;#10;if triangle1.contains(mouse) == True:&amp;#10;    continueRoutine = False&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="fixation_square = new visual.Polygon({&quot;win&quot;: psychoJS.window, &quot;edges&quot;: 4, &quot;radius&quot;: 0.1, &quot;pos&quot;: [0, 0], &quot;size&quot;: 0.1, &quot;fillColor&quot;: [1, 1, 1], &quot;fillColorSpace&quot;: &quot;rgb&quot;, &quot;ori&quot;: 90.0});&amp;#10;fixation_square.draw();&amp;#10;psychoJS.window.update();&amp;#10;core.wait(0.2);&amp;#10;mouse = new psychoJS.eventManager.Mouse({&quot;win&quot;: psychoJS.window});&amp;#10;mouse.mouseClock = new util.Clock();&amp;#10;if ((triangle_pos !== [0, 0.25])) {&amp;#10;    circle1_pos = [0, 0.25];&amp;#10;} else {&amp;#10;    circle1_pos = [0.1875, 0.1875];&amp;#10;}&amp;#10;if (((triangle_pos !== [0.1875, 0.1875]) &amp;&amp; (triangle_pos !== [0, 0.25]))) {&amp;#10;    circle2_pos = [0.1875, 0.1875];&amp;#10;} else {&amp;#10;    circle2_pos = [0.25, 0];&amp;#10;}&amp;#10;if ((((triangle_pos !== [0.25, 0]) &amp;&amp; (triangle_pos !== [0.1875, 0.1875])) &amp;&amp; (triangle_pos !== [0, 0.25]))) {&amp;#10;    circle3_pos = [0.25, 0];&amp;#10;} else {&amp;#10;    circle3_pos = [0.1875, (- 0.1875)];&amp;#10;}&amp;#10;if (((((triangle_pos === [0, (- 0.25)]) || (triangle_pos === [(- 0.1875), (- 0.1875)])) || (triangle_pos === [(- 0.25), 0])) || (triangle_pos === [(- 0.1875), 0.1875]))) {&amp;#10;    circle4_pos = [0.1875, (- 0.1875)];&amp;#10;} else {&amp;#10;    circle4_pos = [0, (- 0.25)];&amp;#10;}&amp;#10;if ((((triangle_pos === [(- 0.1875), (- 0.1875)]) || (triangle_pos === [(- 0.25), 0])) || (triangle_pos === [(- 0.1875), 0.1875]))) {&amp;#10;    circle5_pos = [0, (- 0.25)];&amp;#10;} else {&amp;#10;    circle5_pos = [(- 0.1875), (- 0.1875)];&amp;#10;}&amp;#10;if (((triangle_pos === [(- 0.25), 0]) || (triangle_pos === [(- 0.1875), 0.1875]))) {&amp;#10;    circle6_pos = [(- 0.1875), (- 0.1875)];&amp;#10;} else {&amp;#10;    circle6_pos = [(- 0.25), 0];&amp;#10;}&amp;#10;if ((triangle_pos === [(- 0.1875), 0.1875])) {&amp;#10;    circle7_pos = [(- 0.25), 0];&amp;#10;} else {&amp;#10;    circle7_pos = [(- 0.1875), 0.1875];&amp;#10;}&amp;#10;if ((triangle_color === &quot;g&quot;)) {&amp;#10;    triangle1_color = [(- 0.6078), 0.6708, (- 0.6708)];&amp;#10;} else {&amp;#10;    triangle1_color = [1.0, (- 1.0), 1.0];&amp;#10;}&amp;#10;circle1_color = [];&amp;#10;circle2_color = [];&amp;#10;circle3_color = [];&amp;#10;circle4_color = [];&amp;#10;circle5_color = [];&amp;#10;circle6_color = [];&amp;#10;circle7_color = [];&amp;#10;circle_positions = [circle1_pos, circle2_pos, circle3_pos, circle4_pos, circle5_pos, circle6_pos, circle7_pos];&amp;#10;circle_colors = [circle1_color, circle2_color, circle3_color, circle4_color, circle5_color, circle6_color, circle7_color];&amp;#10;for (var ii, _pj_c = 0, _pj_a = util.range(circle_colors.length), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    ii = _pj_a[_pj_c];&amp;#10;    if ((circle_positions[ii] === pink_circle_pos)) {&amp;#10;        circle_colors[ii] = [1.0, (- 1.0), 1.0];&amp;#10;    } else {&amp;#10;        circle_colors[ii] = [(- 0.6708), 0.6708, (- 0.6708)];&amp;#10;    }&amp;#10;}&amp;#10;for (var ii, _pj_c = 0, _pj_a = util.range(circle_colors.length), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    ii = _pj_a[_pj_c];&amp;#10;    circles = new visual.Circle({&quot;win&quot;: psychoJS.window, &quot;edges&quot;: &quot;circle&quot;, &quot;pos&quot;: circle_positions[ii], &quot;size&quot;: 0.1, &quot;fillColor&quot;: circle_colors[ii], &quot;fillColorSpace&quot;: &quot;rgb&quot;});&amp;#10;    circles.draw();&amp;#10;}&amp;#10;triangle1 = new visual.Polygon({&quot;win&quot;: psychoJS.window, &quot;edges&quot;: 3, &quot;pos&quot;: triangle_pos, &quot;size&quot;: 0.125, &quot;fillColor&quot;: triangle1_color, &quot;lineColor&quot;: triangle1_color, &quot;fillColorSpace&quot;: &quot;rgb&quot;, &quot;lineColorSpace&quot;: &quot;rgb&quot;});&amp;#10;triangle1.draw();&amp;#10;psychoJS.window.update();&amp;#10;while ((triangle1.contains(mouse) === false)) {&amp;#10;    core.wait(1);&amp;#10;}&amp;#10;if ((triangle1.contains(mouse) === true)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="Welcome_Page"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'triangle_pos': (0, 0.25), 'triangle_color': 'g', 'pink_circle_pos': 0.0}, {'triangle_pos': (0.1875, 0.1875), 'triangle_color': 'g', 'pink_circle_pos': 0.0}, {'triangle_pos': (0.25, 0), 'triangle_color': 'g', 'pink_circle_pos': 0.0}, {'triangle_pos': (0.1875, -0.1875), 'triangle_color': 'g', 'pink_circle_pos': 0.0}, {'triangle_pos': (0, -0.25), 'triangle_color': 'g', 'pink_circle_pos': 0.0}, {'triangle_pos': (-0.1875, -0.1875), 'triangle_color': 'g', 'pink_circle_pos': 0.0}, {'triangle_pos': (-0.25, 0), 'triangle_color': 'g', 'pink_circle_pos': 0.0}, {'triangle_pos': (-0.1875, 0.1875), 'triangle_color': 'g', 'pink_circle_pos': 0.0}, {'triangle_pos': (0, 0.25), 'triangle_color': 'g', 'pink_circle_pos': (-0.1875, -0.1875)}, {'triangle_pos': (0.1875, 0.1875), 'triangle_color': 'g', 'pink_circle_pos': (0, -0.25)}, {'triangle_pos': (0.25, 0), 'triangle_color': 'g', 'pink_circle_pos': (0, 0.25)}, {'triangle_pos': (0.1875, -0.1875), 'triangle_color': 'g', 'pink_circle_pos': (0.25, 0)}, {'triangle_pos': (0, -0.25), 'triangle_color': 'g', 'pink_circle_pos': (-0.1875, 0.1875)}, {'triangle_pos': (-0.1875, -0.1875), 'triangle_color': 'g', 'pink_circle_pos': (-0.25, 0)}, {'triangle_pos': (-0.25, 0), 'triangle_color': 'g', 'pink_circle_pos': (0.1875, -0.1875)}, {'triangle_pos': (-0.1875, 0.1875), 'triangle_color': 'g', 'pink_circle_pos': (0.1875, 0.1875)}, {'triangle_pos': (0, 0.25), 'triangle_color': 'p', 'pink_circle_pos': 0.0}, {'triangle_pos': (0.1875, 0.1875), 'triangle_color': 'p', 'pink_circle_pos': 0.0}, {'triangle_pos': (0.25, 0), 'triangle_color': 'p', 'pink_circle_pos': 0.0}, {'triangle_pos': (0.1875, -0.1875), 'triangle_color': 'p', 'pink_circle_pos': 0.0}, {'triangle_pos': (0, -0.25), 'triangle_color': 'p', 'pink_circle_pos': 0.0}, {'triangle_pos': (-0.1875, -0.1875), 'triangle_color': 'p', 'pink_circle_pos': 0.0}, {'triangle_pos': (-0.25, 0), 'triangle_color': 'p', 'pink_circle_pos': 0.0}, {'triangle_pos': (-0.1875, 0.1875), 'triangle_color': 'p', 'pink_circle_pos': 0.0}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="Conditions Spreadsheet-2.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="code_attempt"/>
    <LoopTerminator name="trials"/>
    <Routine name="End_Routine"/>
  </Flow>
</PsychoPy2experiment>
