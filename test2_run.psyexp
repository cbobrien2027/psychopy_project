<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2024.1.4">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant':'f&quot;{randint(0, 999999):06.0f}&quot;', 'session':'001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="(1024, 768)" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="float" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="test2_run" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="" valType="code" updates="None" name="frameRate"/>
    <Param val="Attempting to measure frame rate of screen, please wait..." valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="warning" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="MIDDLE_BUTTON" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="1" valType="code" updates="None" name="runMode"/>
    <Param val="False" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <RoutineSettingsComponent name="trial" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="trial" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import {clock, core, event, visual} from 'psychopy';&amp;#10;import {keyboard} from 'psychopy/hardware';&amp;#10;mywin = new visual.Window([600, 600], {&quot;monitor&quot;: &quot;testMonitor&quot;, &quot;units&quot;: &quot;deg&quot;, &quot;color&quot;: [(- 1), (- 1), (- 1)]});&amp;#10;text_msg = new visual.TextStim({&quot;win&quot;: mywin, &quot;text&quot;: &quot;Welcome to the experiment. Choose the triangle in the following images. Press the space bar to begin.&quot;});&amp;#10;text_msg.draw();&amp;#10;mywin.update();&amp;#10;instruction_msg_time = psychoJS.eventManager.waitKeys({&quot;keyList&quot;: [&quot;space&quot;]});&amp;#10;xvalues_range = [0, 3, 4, 3, 0, (- 3), (- 4), (- 3)];&amp;#10;yvalues_range = [4, 3, 0, (- 3), (- 4), (- 3), 0, 3];&amp;#10;possible_positions = [[0, 4], [3, 3], [4, 0], [3, (- 3)], [0, (- 4)], [(- 3), (- 3)], [(- 4), 0], [(- 3), 3]];&amp;#10;for (var ii, _pj_c = 0, _pj_a = possible_positions, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    ii = _pj_a[_pj_c];&amp;#10;    if ((ii === triangle_pos)) {&amp;#10;        triangle1 = new visual.Polygon({&quot;win&quot;: mywin, &quot;edges&quot;: 3, &quot;radius&quot;: 1.25, &quot;colorSpace&quot;: &quot;rgb&quot;, &quot;pos&quot;: ii});&amp;#10;        if ((triangle_color === &quot;g&quot;)) {&amp;#10;            triangle1.color = [0, 255, 0];&amp;#10;        } else {&amp;#10;            triangle1.color = [255, 0, 0];&amp;#10;        }&amp;#10;        triangle1.draw();&amp;#10;    } else {&amp;#10;        circle1 = new visual.Circle({&quot;win&quot;: mywin, &quot;radius&quot;: 1, &quot;edges&quot;: &quot;circle&quot;, &quot;colorSpace&quot;: &quot;rgb&quot;, &quot;pos&quot;: ii});&amp;#10;        if ((ii === pink_circle_pos)) {&amp;#10;            circle1.color(255, 0, 0);&amp;#10;        } else {&amp;#10;            circle1.color(0, 255, 0);&amp;#10;        }&amp;#10;        circle1.draw();&amp;#10;    }&amp;#10;    mywin.update();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;xvalues_range = [0, 3, 4, 3, 0, -3, -4, -3]&amp;#10;yvalues_range = [4, 3, 0, -3, -4, -3, 0, 3]&amp;#10;&amp;#10;possible_positions = [(0, 4), (3, 3), (4, 0), (3, -3), (0, -4), (-3, -3), (-4, 0), (-3, 3)]&amp;#10;&amp;#10;for ii in possible_positions:&amp;#10;    if ii == triangle_pos:&amp;#10;        triangle1 = visual.Polygon(win = mywin, edges=3, radius=1.25, colorSpace = 'rgb', pos=ii)&amp;#10;        if triangle_color == 'g':&amp;#10;            triangle1.color = (0, 255, 0)&amp;#10;        else:&amp;#10;            triangle1.color = (255, 0, 0)&amp;#10;        triangle1.draw()&amp;#10;    else:&amp;#10;        circle1 = visual.Circle (win = mywin, radius= 1, edges='circle', colorSpace = 'rgb', pos=ii)&amp;#10;        if ii == pink_circle_pos:&amp;#10;            circle1.color (255, 0, 0)&amp;#10;        else:&amp;#10;            circle1.color (0, 255, 0)&amp;#10;        circle1.draw()&amp;#10;    mywin.update()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Instruction_Page">
      <RoutineSettingsComponent name="Instruction_Page" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Instruction_Page" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy import visual, core, event, clock&amp;#10;from psychopy.hardware import keyboard&amp;#10;&amp;#10;mywin = visual.Window ([600, 600], monitor = &quot;testMonitor&quot;, units = &quot;deg&quot;, color = [-1, -1, -1])&amp;#10;&amp;#10;text_msg = visual.TextStim(win = mywin, text='Welcome to the experiment. Choose the triangle in the following images. Press the space bar to begin.')&amp;#10;text_msg.draw()&amp;#10;mywin.update()&amp;#10;instruction_msg_time = event.waitKeys (keyList = ['space'])" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {clock, core, event, visual} from 'psychopy';&amp;#10;import {keyboard} from 'psychopy/hardware';&amp;#10;mywin = new visual.Window([600, 600], {&quot;monitor&quot;: &quot;testMonitor&quot;, &quot;units&quot;: &quot;deg&quot;, &quot;color&quot;: [(- 1), (- 1), (- 1)]});&amp;#10;text_msg = new visual.TextStim({&quot;win&quot;: mywin, &quot;text&quot;: &quot;Welcome to the experiment. Choose the triangle in the following images. Press the space bar to begin.&quot;});&amp;#10;text_msg.draw();&amp;#10;mywin.update();&amp;#10;instruction_msg_time = psychoJS.eventManager.waitKeys({&quot;keyList&quot;: [&quot;space&quot;]});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="routine_1">
      <RoutineSettingsComponent name="routine_1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="routine_1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="xvalues_range = [0, 3, 4, 3, 0, -3, -4, -3]&amp;#10;yvalues_range = [4, 3, 0, -3, -4, -3, 0, 3]&amp;#10;for jj in range (8):&amp;#10;    if xvalues_range [jj] == 0 and yvalues_range [jj] == 4:&amp;#10;       triangle1 = visual.Polygon(win = mywin, edges=3, radius=1.25, fillColor=[0, 255, 0], lineColor = [0, 255, 0], colorSpace = 'rgb', pos=(xvalues_range [jj], yvalues_range [jj]))&amp;#10;       triangle1.draw()&amp;#10;    else:&amp;#10;       circle1 = visual.Circle (win = mywin, radius= 1, edges='circle', fillColor= [0, 255, 0], colorSpace = 'rgb', pos=(xvalues_range [jj], yvalues_range [jj]))&amp;#10;       circle1.setAutoDraw(True)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="routine_1"/>
    <Routine name="Instruction_Page"/>
    <LoopInitiator loopType="TrialHandler" name="trials24">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'triangle_pos': (0, 4), 'triangle_color': 'g', 'pink_circle_pos': 0.0}, {'triangle_pos': (3, 3), 'triangle_color': 'g', 'pink_circle_pos': 0.0}, {'triangle_pos': (4, 0), 'triangle_color': 'g', 'pink_circle_pos': 0.0}, {'triangle_pos': (3, -3), 'triangle_color': 'g', 'pink_circle_pos': 0.0}, {'triangle_pos': (0, -4), 'triangle_color': 'g', 'pink_circle_pos': 0.0}, {'triangle_pos': (-3, -3), 'triangle_color': 'g', 'pink_circle_pos': 0.0}, {'triangle_pos': (-4, 0), 'triangle_color': 'g', 'pink_circle_pos': 0.0}, {'triangle_pos': (-3, 3), 'triangle_color': 'g', 'pink_circle_pos': 0.0}, {'triangle_pos': (0, 4), 'triangle_color': 'g', 'pink_circle_pos': (-3, -3)}, {'triangle_pos': (3, 3), 'triangle_color': 'g', 'pink_circle_pos': (0, -4)}, {'triangle_pos': (4, 0), 'triangle_color': 'g', 'pink_circle_pos': (0, 4)}, {'triangle_pos': (3, -3), 'triangle_color': 'g', 'pink_circle_pos': (4, 0)}, {'triangle_pos': (0, -4), 'triangle_color': 'g', 'pink_circle_pos': (-3, 3)}, {'triangle_pos': (-3, -3), 'triangle_color': 'g', 'pink_circle_pos': (-4, 0)}, {'triangle_pos': (-4, 0), 'triangle_color': 'g', 'pink_circle_pos': (3, -3)}, {'triangle_pos': (-3, 3), 'triangle_color': 'g', 'pink_circle_pos': (3, 3)}, {'triangle_pos': (0, 4), 'triangle_color': 'p', 'pink_circle_pos': 0.0}, {'triangle_pos': (3, 3), 'triangle_color': 'p', 'pink_circle_pos': 0.0}, {'triangle_pos': (4, 0), 'triangle_color': 'p', 'pink_circle_pos': 0.0}, {'triangle_pos': (3, -3), 'triangle_color': 'p', 'pink_circle_pos': 0.0}, {'triangle_pos': (0, -4), 'triangle_color': 'p', 'pink_circle_pos': 0.0}, {'triangle_pos': (-3, -3), 'triangle_color': 'p', 'pink_circle_pos': 0.0}, {'triangle_pos': (-4, 0), 'triangle_color': 'p', 'pink_circle_pos': 0.0}, {'triangle_pos': (-3, 3), 'triangle_color': 'p', 'pink_circle_pos': 0.0}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="/Users/carolineobrien/Downloads/Conditions Spreadsheet.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="" valType="num"/>
      <Param name="name" updates="None" val="trials24" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial"/>
    <LoopTerminator name="trials24"/>
  </Flow>
</PsychoPy2experiment>
